{
  "info": {
    "_postman_id": "bc368c3a-36c9-4a6c-8f75-ca0184f3e81c",
    "name": "GeoSpatial",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "testNumber",
      "value": 0,
      "type": "int"
    },
    {
      "key": "requestBody",
      "value": "",
      "type": "string"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "testNumber = pm.variables.get(\"testNumber\");",
          "let testData = pm.iterationData.get(\"testData\")",
          "let requestBody = JSON.stringify(testData[testNumber].requestBody)",
          "++testNumber",
          "pm.variables.set(\"testNumber\",testNumber);",
          "pm.variables.set(\"requestBody\",requestBody);"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "http://{{host}}/v2/ods/geospatialconditioning/health",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "2b368fb0-0268-4c8a-974e-bc10439be682",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Check response with no errors', () => {",
              "pm.response.to.have.status(200);",
              "pm.response.to.have.header(\"Content-Type\");",
              "});",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{host}}/v2/ods/geospatialconditioning/health",
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {},
        "description": "This request returns a successful response and performs assertions on expected content values"
      },
      "response": []
    },
    {
      "name": "ICORDS D Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "8c5a5fe9-59bf-450c-865a-80033033726d",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Decimal Degree Processor\", function () {",
              "var jsonData = JSON.parse(responseBody);",
              " testData = pm.iterationData.get(\"testData\")",
              " expectedResponse = testData[testNumber-1].expectedResponse;",
              "pm.expect(JSON.stringify(jsonData.GEO[\"GeoJSON\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"GeoJSON\"]));",
              "pm.expect(JSON.stringify(jsonData.GEO[\"MBR\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"MBR\"]));",
              "pm.expect(expectedResponse[0].GEO[\"CountryCodes\"]).to.have.deep.members(jsonData.GEO[\"CountryCodes\"]);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{requestBody}}"
        },
        "url": {
          "raw": "http://{{host}}/v2/ods/geospatialconditioning/nitf21",
          "protocol": "http",
          "host": [
            "{{host}}"
          ],
          "path": [
            "v2",
            "ods",
            "geospatialconditioning",
            "nitf21"
          ]
        }
      },
      "response": []
    },
    {
      "name": "ICORDS G Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "93113837-370c-4c13-a5b5-7f284715694e",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Geographic Degree Processor\", function () {",
              "var jsonData = JSON.parse(responseBody);",
              "testData = pm.iterationData.get(\"testData\")",
              "expectedResponse = testData[testNumber-1].expectedResponse;",
              "pm.expect(JSON.stringify(jsonData.GEO[\"GeoJSON\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"GeoJSON\"]));",
              "pm.expect(JSON.stringify(jsonData.GEO[\"MBR\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"MBR\"]));",
              "pm.expect(expectedResponse[0].GEO[\"CountryCodes\"]).to.have.deep.members(jsonData.GEO[\"CountryCodes\"]);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{requestBody}}"
        },
        "url": {
          "raw": "http://{{host}}/v2/ods/geospatialconditioning/nitf21",
          "protocol": "http",
          "host": [
            "{{host}}"
          ],
          "path": [
            "v2",
            "ods",
            "geospatialconditioning",
            "nitf21"
          ]
        }
      },
      "response": []
    },
    {
      "name": "ICORDS U Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9e15f3c9-b2e6-409a-b83b-7c7bfc659f6e",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "pm.test(\"UTMMGRS Degree Processor\", function () {",
              "var jsonData = JSON.parse(responseBody);",
              "testData = pm.iterationData.get(\"testData\")",
              "expectedResponse = testData[testNumber-1].expectedResponse;",
              "pm.expect(JSON.stringify(jsonData.GEO[\"GeoJSON\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"GeoJSON\"]));",
              "pm.expect(JSON.stringify(jsonData.GEO[\"MBR\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"MBR\"]));",
              "pm.expect(expectedResponse[0].GEO[\"CountryCodes\"]).to.have.deep.members(jsonData.GEO[\"CountryCodes\"]);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{requestBody}}"
        },
        "url": {
          "raw": "http://{{host}}/v2/ods/geospatialconditioning/nitf21",
          "protocol": "http",
          "host": [
            "{{host}}"
          ],
          "path": [
            "v2",
            "ods",
            "geospatialconditioning",
            "nitf21"
          ]
        }
      },
      "response": []
    },
    {
      "name": "ICORDS N Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "feccdda8-c4aa-42e6-9fd2-97ec4d271e7e",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "pm.test(\"North Degree Processor\", function () {",
              "var jsonData = JSON.parse(responseBody);",
              "testData = pm.iterationData.get(\"testData\")",
              "expectedResponse = testData[testNumber-1].expectedResponse;",
              "pm.expect(JSON.stringify(jsonData.GEO[\"GeoJSON\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"GeoJSON\"]));",
              "pm.expect(JSON.stringify(jsonData.GEO[\"MBR\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"MBR\"]));",
              "pm.expect(expectedResponse[0].GEO[\"CountryCodes\"]).to.have.deep.members(jsonData.GEO[\"CountryCodes\"]);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{requestBody}}"
        },
        "url": {
          "raw": "http://{{host}}/v2/ods/geospatialconditioning/nitf21",
          "protocol": "http",
          "host": [
            "{{host}}"
          ],
          "path": [
            "v2",
            "ods",
            "geospatialconditioning",
            "nitf21"
          ]
        }
      },
      "response": []
    },
    {
      "name": "ICORDS S Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "fcfae25d-3af3-4192-af68-7c1bf7f17675",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\",function () {",
              "      pm.response.to.have.status(200);",
              "});",
              "pm.test(\"South Degree Processor\", function () {",
              "var jsonData = JSON.parse(responseBody);",
              "testData = pm.iterationData.get(\"testData\")",
              "expectedResponse = testData[testNumber-1].expectedResponse;",
              "pm.expect(JSON.stringify(jsonData.GEO[\"GeoJSON\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"GeoJSON\"]));",
              "pm.expect(JSON.stringify(jsonData.GEO[\"MBR\"])).to.equal(JSON.stringify(expectedResponse[0].GEO[\"MBR\"]));",
              "pm.expect(expectedResponse[0].GEO[\"CountryCodes\"]).to.have.deep.members(jsonData.GEO[\"CountryCodes\"]);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{requestBody}}"
        },
        "url": {
          "raw": "http://{{host}}/v2/ods/geospatialconditioning/nitf21",
          "protocol": "http",
          "host": [
            "{{host}}"
          ],
          "path": [
            "v2",
            "ods",
            "geospatialconditioning",
            "nitf21"
          ]
        }
      },
      "response": []
    }
  ]
}
